version: '3.8'

services:
  # Next.js 应用
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: lab-equipment-website
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - lab-equipment-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: lab-equipment-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - lab-equipment-network

  # Redis 缓存（可选）
  redis:
    image: redis:alpine
    container_name: lab-equipment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - lab-equipment-network
    command: redis-server --appendonly yes

networks:
  lab-equipment-network:
    driver: bridge

volumes:
  redis_data:
    driver: local 